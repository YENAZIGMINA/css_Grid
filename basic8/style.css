@charset "UTF-8";

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* ❗ grid는 flex보다 나중에 나왔음
   ❗ flex는 한방향 배치 구현
   ❗ grid는 두방향 배치 구현
   두 개를 다 안다면 알맞은 곳에 사용할 수 있다
   전체구성은 grid로 하고, 부분구성은 flex로 하는 경우가 많다 */

.container {
    border: 2px solid #684591;
    background-color: rgb(204, 145, 206);
    padding: 10px;
}
.item {
    border: 2px solid #684591;
    background-color: rgb(255, 250, 184);
    padding: 10px;
}

/* grid-template-area
각 영역에 이름을 붙이고, 그 이름을 이용해서 배치하는 방법
빈칸만들기 - 마침표(.)는 셀을 빈칸으로 만듦 (마침표대신 none도 가능)*/

.container {
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr 3fr 1fr;
    grid-template-areas: /* -> 그리드 이름 설정 */
    'header header header' 
    'side-a main side-b'
    ' ...   ...   ...'  /* 띄워쓰기는 사이간격 */
    /* 빈칸넣고 싶을때 . 찍으면됨 (.수는 상관없음)/빈칸처럼 뻥 뚤려보임 */
    'footer footer footer';
    height: 80vh;
    grid-auto-rows: 100px 1fr 30px 100px;
}
.header {grid-area:header;}
.side-a {grid-area:side-a}
.side-b {grid-area:side-b}
.main {grid-area:main}
.footer {grid-area:footer;}

.item {}