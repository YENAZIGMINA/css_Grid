@charset "UTF-8";

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* ❗ grid는 flex보다 나중에 나왔음
   ❗ flex는 한방향 배치 구현
   ❗ grid는 두방향 배치 구현
   두 개를 다 안다면 알맞은 곳에 사용할 수 있다
   전체구성은 grid로 하고, 부분구성은 flex로 하는 경우가 많다 */

.container {
    border: 2px solid #684591;
    background-color: rgb(204, 145, 206);
    padding: 10px;
}
.item {
    border: 2px solid #684591;
    background-color: rgb(255, 250, 184);
    padding: 10px;
}


/* grid-auto-flow 자동배치 알고리즘
아이템이 자동배치되는 흐름을 결정하는 속성입니다*/
.container {
    display: grid;
    grid-template-columns: repeat(auto-fill,minmax(25%,auto)); 
    /* auto-fill 몇개던지 알아서 채워라 */
    grid-template-rows: repeat(5,minmax(50px,auto));
    grid-auto-flow: dense; 
    /* flow 흐름을 결정/ dense 떨어진 요소들을 밀집해라 */
}
.item:nth-child(2) {grid-column: auto/span 3;} /* 컬럼 3개를 묶어라 */
/* auto칸은 적용되는 순서칸인데 auto로 설정하면 nth:child에서 설정한것에 값 적용됨 */
.item:nth-child(5) {grid-column: auto/span 3;}
.item:nth-child(10) {grid-column: auto/span 2;}
.item:nth-child(14) {grid-column: auto/span 4;}
.item:nth-child(17) {grid-column: auto/span 2;}
.item:nth-child(20) {grid-column: auto/span 3;}